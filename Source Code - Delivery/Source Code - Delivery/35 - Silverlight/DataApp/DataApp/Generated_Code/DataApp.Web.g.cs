//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataApp
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.ServiceModel.DomainServices;
    using System.ServiceModel.DomainServices.Client;
    using System.ServiceModel.DomainServices.Client.ApplicationServices;
    
    
    /// <summary>
    /// Context for the RIA application.
    /// </summary>
    /// <remarks>
    /// This context extends the base to make application services and types available
    /// for consumption from code and xaml.
    /// </remarks>
    public sealed partial class WebContext : WebContextBase
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the WebContext class.
        /// </summary>
        public WebContext()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the context that is registered as a lifetime object with the current application.
        /// </summary>
        /// <exception cref="InvalidOperationException"> is thrown if there is no current application,
        /// no contexts have been added, or more than one context has been added.
        /// </exception>
        /// <seealso cref="System.Windows.Application.ApplicationLifetimeObjects"/>
        public new static WebContext Current
        {
            get
            {
                return ((WebContext)(WebContextBase.Current));
            }
        }
    }
}
namespace DataApp.Web
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.Runtime.Serialization;
    using System.ServiceModel;
    using System.ServiceModel.DomainServices;
    using System.ServiceModel.DomainServices.Client;
    using System.ServiceModel.DomainServices.Client.ApplicationServices;
    using System.ServiceModel.Web;
    using System.Xml.Serialization;
    
    
    /// <summary>
    /// The 'Employee' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/DataApp.Web")]
    public sealed partial class Employee : Entity
    {
        
        private string _address;
        
        private Nullable<DateTime> _birthDate;
        
        private string _city;
        
        private string _country;
        
        private EntityRef<Employee> _employee1;
        
        private int _employeeID;
        
        private EntityCollection<Employee> _employees1;
        
        private string _extension;
        
        private string _firstName;
        
        private Nullable<DateTime> _hireDate;
        
        private string _homePhone;
        
        private string _lastName;
        
        private string _notes;
        
        private EntityCollection<Order> _orders;
        
        private byte[] _photo;
        
        private string _photoPath;
        
        private string _postalCode;
        
        private string _region;
        
        private Nullable<int> _reportsTo;
        
        private string _title;
        
        private string _titleOfCourtesy;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnAddressChanging(string value);
        partial void OnAddressChanged();
        partial void OnBirthDateChanging(Nullable<DateTime> value);
        partial void OnBirthDateChanged();
        partial void OnCityChanging(string value);
        partial void OnCityChanged();
        partial void OnCountryChanging(string value);
        partial void OnCountryChanged();
        partial void OnEmployeeIDChanging(int value);
        partial void OnEmployeeIDChanged();
        partial void OnExtensionChanging(string value);
        partial void OnExtensionChanged();
        partial void OnFirstNameChanging(string value);
        partial void OnFirstNameChanged();
        partial void OnHireDateChanging(Nullable<DateTime> value);
        partial void OnHireDateChanged();
        partial void OnHomePhoneChanging(string value);
        partial void OnHomePhoneChanged();
        partial void OnLastNameChanging(string value);
        partial void OnLastNameChanged();
        partial void OnNotesChanging(string value);
        partial void OnNotesChanged();
        partial void OnPhotoChanging(byte[] value);
        partial void OnPhotoChanged();
        partial void OnPhotoPathChanging(string value);
        partial void OnPhotoPathChanged();
        partial void OnPostalCodeChanging(string value);
        partial void OnPostalCodeChanged();
        partial void OnRegionChanging(string value);
        partial void OnRegionChanged();
        partial void OnReportsToChanging(Nullable<int> value);
        partial void OnReportsToChanged();
        partial void OnTitleChanging(string value);
        partial void OnTitleChanged();
        partial void OnTitleOfCourtesyChanging(string value);
        partial void OnTitleOfCourtesyChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Employee"/> class.
        /// </summary>
        public Employee()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Address' value.
        /// </summary>
        [DataMember()]
        [StringLength(60)]
        public string Address
        {
            get
            {
                return this._address;
            }
            set
            {
                if ((this._address != value))
                {
                    this.OnAddressChanging(value);
                    this.RaiseDataMemberChanging("Address");
                    this.ValidateProperty("Address", value);
                    this._address = value;
                    this.RaiseDataMemberChanged("Address");
                    this.OnAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'BirthDate' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> BirthDate
        {
            get
            {
                return this._birthDate;
            }
            set
            {
                if ((this._birthDate != value))
                {
                    this.OnBirthDateChanging(value);
                    this.RaiseDataMemberChanging("BirthDate");
                    this.ValidateProperty("BirthDate", value);
                    this._birthDate = value;
                    this.RaiseDataMemberChanged("BirthDate");
                    this.OnBirthDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'City' value.
        /// </summary>
        [DataMember()]
        [StringLength(15)]
        public string City
        {
            get
            {
                return this._city;
            }
            set
            {
                if ((this._city != value))
                {
                    this.OnCityChanging(value);
                    this.RaiseDataMemberChanging("City");
                    this.ValidateProperty("City", value);
                    this._city = value;
                    this.RaiseDataMemberChanged("City");
                    this.OnCityChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Country' value.
        /// </summary>
        [DataMember()]
        [StringLength(15)]
        public string Country
        {
            get
            {
                return this._country;
            }
            set
            {
                if ((this._country != value))
                {
                    this.OnCountryChanging(value);
                    this.RaiseDataMemberChanging("Country");
                    this.ValidateProperty("Country", value);
                    this._country = value;
                    this.RaiseDataMemberChanged("Country");
                    this.OnCountryChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="Employee"/> entity.
        /// </summary>
        [Association("Employee_Employee", "ReportsTo", "EmployeeID", IsForeignKey=true)]
        [XmlIgnore()]
        public Employee Employee1
        {
            get
            {
                if ((this._employee1 == null))
                {
                    this._employee1 = new EntityRef<Employee>(this, "Employee1", this.FilterEmployee1);
                }
                return this._employee1.Entity;
            }
            set
            {
                Employee previous = this.Employee1;
                if ((previous != value))
                {
                    this.ValidateProperty("Employee1", value);
                    if ((previous != null))
                    {
                        this._employee1.Entity = null;
                        previous.Employees1.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.ReportsTo = value.EmployeeID;
                    }
                    else
                    {
                        this.ReportsTo = default(Nullable<int>);
                    }
                    this._employee1.Entity = value;
                    if ((value != null))
                    {
                        value.Employees1.Add(this);
                    }
                    this.RaisePropertyChanged("Employee1");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EmployeeID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int EmployeeID
        {
            get
            {
                return this._employeeID;
            }
            set
            {
                if ((this._employeeID != value))
                {
                    this.OnEmployeeIDChanging(value);
                    this.ValidateProperty("EmployeeID", value);
                    this._employeeID = value;
                    this.RaisePropertyChanged("EmployeeID");
                    this.OnEmployeeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="Employee"/> entities.
        /// </summary>
        [Association("Employee_Employee", "EmployeeID", "ReportsTo")]
        [XmlIgnore()]
        public EntityCollection<Employee> Employees1
        {
            get
            {
                if ((this._employees1 == null))
                {
                    this._employees1 = new EntityCollection<Employee>(this, "Employees1", this.FilterEmployees1, this.AttachEmployees1, this.DetachEmployees1);
                }
                return this._employees1;
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Extension' value.
        /// </summary>
        [DataMember()]
        [StringLength(4)]
        public string Extension
        {
            get
            {
                return this._extension;
            }
            set
            {
                if ((this._extension != value))
                {
                    this.OnExtensionChanging(value);
                    this.RaiseDataMemberChanging("Extension");
                    this.ValidateProperty("Extension", value);
                    this._extension = value;
                    this.RaiseDataMemberChanged("Extension");
                    this.OnExtensionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'FirstName' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(10)]
        public string FirstName
        {
            get
            {
                return this._firstName;
            }
            set
            {
                if ((this._firstName != value))
                {
                    this.OnFirstNameChanging(value);
                    this.RaiseDataMemberChanging("FirstName");
                    this.ValidateProperty("FirstName", value);
                    this._firstName = value;
                    this.RaiseDataMemberChanged("FirstName");
                    this.OnFirstNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'HireDate' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> HireDate
        {
            get
            {
                return this._hireDate;
            }
            set
            {
                if ((this._hireDate != value))
                {
                    this.OnHireDateChanging(value);
                    this.RaiseDataMemberChanging("HireDate");
                    this.ValidateProperty("HireDate", value);
                    this._hireDate = value;
                    this.RaiseDataMemberChanged("HireDate");
                    this.OnHireDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'HomePhone' value.
        /// </summary>
        [DataMember()]
        [StringLength(24)]
        public string HomePhone
        {
            get
            {
                return this._homePhone;
            }
            set
            {
                if ((this._homePhone != value))
                {
                    this.OnHomePhoneChanging(value);
                    this.RaiseDataMemberChanging("HomePhone");
                    this.ValidateProperty("HomePhone", value);
                    this._homePhone = value;
                    this.RaiseDataMemberChanged("HomePhone");
                    this.OnHomePhoneChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'LastName' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [StringLength(20)]
        public string LastName
        {
            get
            {
                return this._lastName;
            }
            set
            {
                if ((this._lastName != value))
                {
                    this.OnLastNameChanging(value);
                    this.RaiseDataMemberChanging("LastName");
                    this.ValidateProperty("LastName", value);
                    this._lastName = value;
                    this.RaiseDataMemberChanged("LastName");
                    this.OnLastNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Notes' value.
        /// </summary>
        [DataMember()]
        public string Notes
        {
            get
            {
                return this._notes;
            }
            set
            {
                if ((this._notes != value))
                {
                    this.OnNotesChanging(value);
                    this.RaiseDataMemberChanging("Notes");
                    this.ValidateProperty("Notes", value);
                    this._notes = value;
                    this.RaiseDataMemberChanged("Notes");
                    this.OnNotesChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="Order"/> entities.
        /// </summary>
        [Association("Employee_Order", "EmployeeID", "EmployeeID")]
        [XmlIgnore()]
        public EntityCollection<Order> Orders
        {
            get
            {
                if ((this._orders == null))
                {
                    this._orders = new EntityCollection<Order>(this, "Orders", this.FilterOrders, this.AttachOrders, this.DetachOrders);
                }
                return this._orders;
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Photo' value.
        /// </summary>
        [DataMember()]
        public byte[] Photo
        {
            get
            {
                return this._photo;
            }
            set
            {
                if ((this._photo != value))
                {
                    this.OnPhotoChanging(value);
                    this.RaiseDataMemberChanging("Photo");
                    this.ValidateProperty("Photo", value);
                    this._photo = value;
                    this.RaiseDataMemberChanged("Photo");
                    this.OnPhotoChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PhotoPath' value.
        /// </summary>
        [DataMember()]
        [StringLength(255)]
        public string PhotoPath
        {
            get
            {
                return this._photoPath;
            }
            set
            {
                if ((this._photoPath != value))
                {
                    this.OnPhotoPathChanging(value);
                    this.RaiseDataMemberChanging("PhotoPath");
                    this.ValidateProperty("PhotoPath", value);
                    this._photoPath = value;
                    this.RaiseDataMemberChanged("PhotoPath");
                    this.OnPhotoPathChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'PostalCode' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string PostalCode
        {
            get
            {
                return this._postalCode;
            }
            set
            {
                if ((this._postalCode != value))
                {
                    this.OnPostalCodeChanging(value);
                    this.RaiseDataMemberChanging("PostalCode");
                    this.ValidateProperty("PostalCode", value);
                    this._postalCode = value;
                    this.RaiseDataMemberChanged("PostalCode");
                    this.OnPostalCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Region' value.
        /// </summary>
        [DataMember()]
        [StringLength(15)]
        public string Region
        {
            get
            {
                return this._region;
            }
            set
            {
                if ((this._region != value))
                {
                    this.OnRegionChanging(value);
                    this.RaiseDataMemberChanging("Region");
                    this.ValidateProperty("Region", value);
                    this._region = value;
                    this.RaiseDataMemberChanged("Region");
                    this.OnRegionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ReportsTo' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<int> ReportsTo
        {
            get
            {
                return this._reportsTo;
            }
            set
            {
                if ((this._reportsTo != value))
                {
                    this.OnReportsToChanging(value);
                    this.RaiseDataMemberChanging("ReportsTo");
                    this.ValidateProperty("ReportsTo", value);
                    this._reportsTo = value;
                    this.RaiseDataMemberChanged("ReportsTo");
                    this.OnReportsToChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Title' value.
        /// </summary>
        [DataMember()]
        [StringLength(30)]
        public string Title
        {
            get
            {
                return this._title;
            }
            set
            {
                if ((this._title != value))
                {
                    this.OnTitleChanging(value);
                    this.RaiseDataMemberChanging("Title");
                    this.ValidateProperty("Title", value);
                    this._title = value;
                    this.RaiseDataMemberChanged("Title");
                    this.OnTitleChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'TitleOfCourtesy' value.
        /// </summary>
        [DataMember()]
        [StringLength(25)]
        public string TitleOfCourtesy
        {
            get
            {
                return this._titleOfCourtesy;
            }
            set
            {
                if ((this._titleOfCourtesy != value))
                {
                    this.OnTitleOfCourtesyChanging(value);
                    this.RaiseDataMemberChanging("TitleOfCourtesy");
                    this.ValidateProperty("TitleOfCourtesy", value);
                    this._titleOfCourtesy = value;
                    this.RaiseDataMemberChanged("TitleOfCourtesy");
                    this.OnTitleOfCourtesyChanged();
                }
            }
        }
        
        private bool FilterEmployee1(Employee entity)
        {
            return (entity.EmployeeID == this.ReportsTo);
        }
        
        private void AttachEmployees1(Employee entity)
        {
            entity.Employee1 = this;
        }
        
        private void DetachEmployees1(Employee entity)
        {
            entity.Employee1 = null;
        }
        
        private bool FilterEmployees1(Employee entity)
        {
            return (entity.ReportsTo == this.EmployeeID);
        }
        
        private void AttachOrders(Order entity)
        {
            entity.Employee = this;
        }
        
        private void DetachOrders(Order entity)
        {
            entity.Employee = null;
        }
        
        private bool FilterOrders(Order entity)
        {
            return (entity.EmployeeID == this.EmployeeID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._employeeID;
        }
    }
    
    /// <summary>
    /// The domain context corresponding to the 'EmployeeDomainServices' domain service.
    /// </summary>
    public sealed partial class EmployeeDomainServices : DomainContext
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="EmployeeDomainServices"/> class.
        /// </summary>
        public EmployeeDomainServices() : 
                this(new WebDomainClient<IEmployeeDomainServicesContract>(new Uri("DataApp-Web-EmployeeDomainServices.svc", UriKind.Relative)))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="EmployeeDomainServices"/> class with the specified service URI.
        /// </summary>
        /// <param name="serviceUri">The EmployeeDomainServices service URI.</param>
        public EmployeeDomainServices(Uri serviceUri) : 
                this(new WebDomainClient<IEmployeeDomainServicesContract>(serviceUri))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="EmployeeDomainServices"/> class with the specified <paramref name="domainClient"/>.
        /// </summary>
        /// <param name="domainClient">The DomainClient instance to use for this domain context.</param>
        public EmployeeDomainServices(DomainClient domainClient) : 
                base(domainClient)
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the set of <see cref="Employee"/> entities that have been loaded into this <see cref="EmployeeDomainServices"/> instance.
        /// </summary>
        public EntitySet<Employee> Employees
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Employee>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="Order"/> entities that have been loaded into this <see cref="EmployeeDomainServices"/> instance.
        /// </summary>
        public EntitySet<Order> Orders
        {
            get
            {
                return base.EntityContainer.GetEntitySet<Order>();
            }
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Employee"/> entities using the 'GetEmployees' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Employee"/> entities.</returns>
        public EntityQuery<Employee> GetEmployeesQuery()
        {
            this.ValidateMethod("GetEmployeesQuery", null);
            return base.CreateQuery<Employee>("GetEmployees", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="Order"/> entities using the 'GetOrders' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="Order"/> entities.</returns>
        public EntityQuery<Order> GetOrdersQuery()
        {
            this.ValidateMethod("GetOrdersQuery", null);
            return base.CreateQuery<Order>("GetOrders", null, false, true);
        }
        
        /// <summary>
        /// Creates a new entity container for this domain context's entity sets.
        /// </summary>
        /// <returns>A new container instance.</returns>
        protected override EntityContainer CreateEntityContainer()
        {
            return new EmployeeDomainServicesEntityContainer();
        }
        
        /// <summary>
        /// Service contract for the 'EmployeeDomainServices' domain service.
        /// </summary>
        [ServiceContract()]
        public interface IEmployeeDomainServicesContract
        {
            
            /// <summary>
            /// Asynchronously invokes the 'GetEmployees' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/EmployeeDomainServices/GetEmployeesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/EmployeeDomainServices/GetEmployees", ReplyAction="http://tempuri.org/EmployeeDomainServices/GetEmployeesResponse")]
            [WebGet()]
            IAsyncResult BeginGetEmployees(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetEmployees'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetEmployees'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetEmployees' operation.</returns>
            QueryResult<Employee> EndGetEmployees(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetOrders' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/EmployeeDomainServices/GetOrdersDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/EmployeeDomainServices/GetOrders", ReplyAction="http://tempuri.org/EmployeeDomainServices/GetOrdersResponse")]
            [WebGet()]
            IAsyncResult BeginGetOrders(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetOrders'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetOrders'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetOrders' operation.</returns>
            QueryResult<Order> EndGetOrders(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'SubmitChanges' operation.
            /// </summary>
            /// <param name="changeSet">The change-set to submit.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/EmployeeDomainServices/SubmitChangesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/EmployeeDomainServices/SubmitChanges", ReplyAction="http://tempuri.org/EmployeeDomainServices/SubmitChangesResponse")]
            IAsyncResult BeginSubmitChanges(IEnumerable<ChangeSetEntry> changeSet, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            /// <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
            IEnumerable<ChangeSetEntry> EndSubmitChanges(IAsyncResult result);
        }
        
        internal sealed class EmployeeDomainServicesEntityContainer : EntityContainer
        {
            
            public EmployeeDomainServicesEntityContainer()
            {
                this.CreateEntitySet<Employee>(EntitySetOperations.All);
                this.CreateEntitySet<Order>(EntitySetOperations.All);
            }
        }
    }
    
    /// <summary>
    /// The 'Order' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/DataApp.Web")]
    public sealed partial class Order : Entity
    {
        
        private string _customerID;
        
        private EntityRef<Employee> _employee;
        
        private Nullable<int> _employeeID;
        
        private Nullable<decimal> _freight;
        
        private Nullable<DateTime> _orderDate;
        
        private int _orderID;
        
        private Nullable<DateTime> _requiredDate;
        
        private string _shipAddress;
        
        private string _shipCity;
        
        private string _shipCountry;
        
        private string _shipName;
        
        private Nullable<DateTime> _shippedDate;
        
        private string _shipPostalCode;
        
        private string _shipRegion;
        
        private Nullable<int> _shipVia;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnCustomerIDChanging(string value);
        partial void OnCustomerIDChanged();
        partial void OnEmployeeIDChanging(Nullable<int> value);
        partial void OnEmployeeIDChanged();
        partial void OnFreightChanging(Nullable<decimal> value);
        partial void OnFreightChanged();
        partial void OnOrderDateChanging(Nullable<DateTime> value);
        partial void OnOrderDateChanged();
        partial void OnOrderIDChanging(int value);
        partial void OnOrderIDChanged();
        partial void OnRequiredDateChanging(Nullable<DateTime> value);
        partial void OnRequiredDateChanged();
        partial void OnShipAddressChanging(string value);
        partial void OnShipAddressChanged();
        partial void OnShipCityChanging(string value);
        partial void OnShipCityChanged();
        partial void OnShipCountryChanging(string value);
        partial void OnShipCountryChanged();
        partial void OnShipNameChanging(string value);
        partial void OnShipNameChanged();
        partial void OnShippedDateChanging(Nullable<DateTime> value);
        partial void OnShippedDateChanged();
        partial void OnShipPostalCodeChanging(string value);
        partial void OnShipPostalCodeChanged();
        partial void OnShipRegionChanging(string value);
        partial void OnShipRegionChanged();
        partial void OnShipViaChanging(Nullable<int> value);
        partial void OnShipViaChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Order"/> class.
        /// </summary>
        public Order()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'CustomerID' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        [StringLength(5)]
        public string CustomerID
        {
            get
            {
                return this._customerID;
            }
            set
            {
                if ((this._customerID != value))
                {
                    this.OnCustomerIDChanging(value);
                    this.RaiseDataMemberChanging("CustomerID");
                    this.ValidateProperty("CustomerID", value);
                    this._customerID = value;
                    this.RaiseDataMemberChanged("CustomerID");
                    this.OnCustomerIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="Employee"/> entity.
        /// </summary>
        [Association("Employee_Order", "EmployeeID", "EmployeeID", IsForeignKey=true)]
        [XmlIgnore()]
        public Employee Employee
        {
            get
            {
                if ((this._employee == null))
                {
                    this._employee = new EntityRef<Employee>(this, "Employee", this.FilterEmployee);
                }
                return this._employee.Entity;
            }
            set
            {
                Employee previous = this.Employee;
                if ((previous != value))
                {
                    this.ValidateProperty("Employee", value);
                    if ((previous != null))
                    {
                        this._employee.Entity = null;
                        previous.Orders.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.EmployeeID = value.EmployeeID;
                    }
                    else
                    {
                        this.EmployeeID = default(Nullable<int>);
                    }
                    this._employee.Entity = value;
                    if ((value != null))
                    {
                        value.Orders.Add(this);
                    }
                    this.RaisePropertyChanged("Employee");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'EmployeeID' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<int> EmployeeID
        {
            get
            {
                return this._employeeID;
            }
            set
            {
                if ((this._employeeID != value))
                {
                    this.OnEmployeeIDChanging(value);
                    this.RaiseDataMemberChanging("EmployeeID");
                    this.ValidateProperty("EmployeeID", value);
                    this._employeeID = value;
                    this.RaiseDataMemberChanged("EmployeeID");
                    this.OnEmployeeIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Freight' value.
        /// </summary>
        [DataMember()]
        public Nullable<decimal> Freight
        {
            get
            {
                return this._freight;
            }
            set
            {
                if ((this._freight != value))
                {
                    this.OnFreightChanging(value);
                    this.RaiseDataMemberChanging("Freight");
                    this.ValidateProperty("Freight", value);
                    this._freight = value;
                    this.RaiseDataMemberChanged("Freight");
                    this.OnFreightChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OrderDate' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> OrderDate
        {
            get
            {
                return this._orderDate;
            }
            set
            {
                if ((this._orderDate != value))
                {
                    this.OnOrderDateChanging(value);
                    this.RaiseDataMemberChanging("OrderDate");
                    this.ValidateProperty("OrderDate", value);
                    this._orderDate = value;
                    this.RaiseDataMemberChanged("OrderDate");
                    this.OnOrderDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OrderID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int OrderID
        {
            get
            {
                return this._orderID;
            }
            set
            {
                if ((this._orderID != value))
                {
                    this.OnOrderIDChanging(value);
                    this.ValidateProperty("OrderID", value);
                    this._orderID = value;
                    this.RaisePropertyChanged("OrderID");
                    this.OnOrderIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'RequiredDate' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> RequiredDate
        {
            get
            {
                return this._requiredDate;
            }
            set
            {
                if ((this._requiredDate != value))
                {
                    this.OnRequiredDateChanging(value);
                    this.RaiseDataMemberChanging("RequiredDate");
                    this.ValidateProperty("RequiredDate", value);
                    this._requiredDate = value;
                    this.RaiseDataMemberChanged("RequiredDate");
                    this.OnRequiredDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShipAddress' value.
        /// </summary>
        [DataMember()]
        [StringLength(60)]
        public string ShipAddress
        {
            get
            {
                return this._shipAddress;
            }
            set
            {
                if ((this._shipAddress != value))
                {
                    this.OnShipAddressChanging(value);
                    this.RaiseDataMemberChanging("ShipAddress");
                    this.ValidateProperty("ShipAddress", value);
                    this._shipAddress = value;
                    this.RaiseDataMemberChanged("ShipAddress");
                    this.OnShipAddressChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShipCity' value.
        /// </summary>
        [DataMember()]
        [StringLength(15)]
        public string ShipCity
        {
            get
            {
                return this._shipCity;
            }
            set
            {
                if ((this._shipCity != value))
                {
                    this.OnShipCityChanging(value);
                    this.RaiseDataMemberChanging("ShipCity");
                    this.ValidateProperty("ShipCity", value);
                    this._shipCity = value;
                    this.RaiseDataMemberChanged("ShipCity");
                    this.OnShipCityChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShipCountry' value.
        /// </summary>
        [DataMember()]
        [StringLength(15)]
        public string ShipCountry
        {
            get
            {
                return this._shipCountry;
            }
            set
            {
                if ((this._shipCountry != value))
                {
                    this.OnShipCountryChanging(value);
                    this.RaiseDataMemberChanging("ShipCountry");
                    this.ValidateProperty("ShipCountry", value);
                    this._shipCountry = value;
                    this.RaiseDataMemberChanged("ShipCountry");
                    this.OnShipCountryChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShipName' value.
        /// </summary>
        [DataMember()]
        [StringLength(40)]
        public string ShipName
        {
            get
            {
                return this._shipName;
            }
            set
            {
                if ((this._shipName != value))
                {
                    this.OnShipNameChanging(value);
                    this.RaiseDataMemberChanging("ShipName");
                    this.ValidateProperty("ShipName", value);
                    this._shipName = value;
                    this.RaiseDataMemberChanged("ShipName");
                    this.OnShipNameChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShippedDate' value.
        /// </summary>
        [DataMember()]
        public Nullable<DateTime> ShippedDate
        {
            get
            {
                return this._shippedDate;
            }
            set
            {
                if ((this._shippedDate != value))
                {
                    this.OnShippedDateChanging(value);
                    this.RaiseDataMemberChanging("ShippedDate");
                    this.ValidateProperty("ShippedDate", value);
                    this._shippedDate = value;
                    this.RaiseDataMemberChanged("ShippedDate");
                    this.OnShippedDateChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShipPostalCode' value.
        /// </summary>
        [DataMember()]
        [StringLength(10)]
        public string ShipPostalCode
        {
            get
            {
                return this._shipPostalCode;
            }
            set
            {
                if ((this._shipPostalCode != value))
                {
                    this.OnShipPostalCodeChanging(value);
                    this.RaiseDataMemberChanging("ShipPostalCode");
                    this.ValidateProperty("ShipPostalCode", value);
                    this._shipPostalCode = value;
                    this.RaiseDataMemberChanged("ShipPostalCode");
                    this.OnShipPostalCodeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShipRegion' value.
        /// </summary>
        [DataMember()]
        [StringLength(15)]
        public string ShipRegion
        {
            get
            {
                return this._shipRegion;
            }
            set
            {
                if ((this._shipRegion != value))
                {
                    this.OnShipRegionChanging(value);
                    this.RaiseDataMemberChanging("ShipRegion");
                    this.ValidateProperty("ShipRegion", value);
                    this._shipRegion = value;
                    this.RaiseDataMemberChanged("ShipRegion");
                    this.OnShipRegionChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ShipVia' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public Nullable<int> ShipVia
        {
            get
            {
                return this._shipVia;
            }
            set
            {
                if ((this._shipVia != value))
                {
                    this.OnShipViaChanging(value);
                    this.RaiseDataMemberChanging("ShipVia");
                    this.ValidateProperty("ShipVia", value);
                    this._shipVia = value;
                    this.RaiseDataMemberChanged("ShipVia");
                    this.OnShipViaChanged();
                }
            }
        }
        
        private bool FilterEmployee(Employee entity)
        {
            return (entity.EmployeeID == this.EmployeeID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._orderID;
        }
    }
}
